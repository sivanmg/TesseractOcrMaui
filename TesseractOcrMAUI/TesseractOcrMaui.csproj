<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net7.0;net7.0-android;net7.0-ios;net7.0-maccatalyst</TargetFrameworks>
		<TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net7.0-windows10.0.19041.0</TargetFrameworks>
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>

		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">14.3</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">14.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
		<AllowUnsafeBlocks>True</AllowUnsafeBlocks>
	</PropertyGroup>
	
	<!-- Package, only with release mode -->
	<PropertyGroup Condition="'$(Configuration)' == 'Release' ">
		<GeneratePackageOnBuild>True</GeneratePackageOnBuild>
	</PropertyGroup>
	

	
	


	<!-- Package properties -->
	<PropertyGroup>
		<Version>1.0.10</Version>
		<Title>Maui Tesseract ocr</Title>
		<PackageId>TesseractOcrMaui</PackageId>
		<Authors>henrivain</Authors>
		<Description>Tesseract wrapper for .Net Maui. Supports Windows, Android and IOS platforms.</Description>
		<PackageProjectUrl></PackageProjectUrl>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<RepositoryUrl>https://github.com/henrivain/TesseractOcrMaui</RepositoryUrl>
		<RepositoryType>git</RepositoryType>
		<PackageTags>tesseract;ocr;maui;csharp;android;windows;arm64-v8a;arm-v7a;x86_64;x86;</PackageTags>
		<PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
		<PackageRequireLicenseAcceptance>True</PackageRequireLicenseAcceptance>
		<Copyright>Copyright 2023 Henri Vainio</Copyright>
		<!-- Output will be found inside this folder locally -->
		<PackageOutputPath>C:\Nugets</PackageOutputPath>
		<NeutralLanguage>en</NeutralLanguage>
		<PackAsTool>False</PackAsTool>
		<GenerateDocumentationFile>True</GenerateDocumentationFile>
		<IncludeSymbols>true</IncludeSymbols>
		<SymbolPackageFormat>snupkg</SymbolPackageFormat>
	</PropertyGroup>


	<!-- Nuget includes -->
	<ItemGroup>
		<None Include="..\README.md" Link="Properties\README.md">
			<Pack>True</Pack>
			<PackagePath>\</PackagePath>
		</None>
	</ItemGroup>

	<!-- Android native libraries-->
	<ItemGroup Condition="$(TargetFramework.Contains('-android'))">
		<AndroidNativeLibrary Include="lib\Android\**" />
	</ItemGroup>

	<!-- Windows native libraries to nuget -->
	<!-- No condition needed, because package path tells to include in windows -->
	<ItemGroup Condition="'$(Configuration)' == 'Release' ">
		<Resource Include="lib\Windows\x86_64\*.dll" Pack="true" PackagePath="lib\net7.0-windows10.0.19041\">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<PackageCopyToOutput>true</PackageCopyToOutput>
		</Resource>
	</ItemGroup>

	<!-- Copy dlls for debuggin test app -->
	<!-- Dlls go to output folder, so dll import can find them. -->
	<ItemGroup Condition="$(TargetFramework.Contains('-windows'))">
		<ContentWithTargetPath Include="lib\Windows\x86_64\**">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<TargetPath>%(Filename)%(Extension)</TargetPath>
		</ContentWithTargetPath>
	</ItemGroup>

	<ItemGroup>
		<Folder Include="Properties\" />
	</ItemGroup>



		<!-- IOS bindings -->
	<PropertyGroup Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">
		<IsBindingProject>True</IsBindingProject>
	</PropertyGroup>
		
	<ItemGroup Condition="$(TargetFramework.Contains('-ios'))">
		<ObjcBindingApiDefinition Include="ApiDefinition.cs" />
		<!-- libtesseract -->
		<NativeReference Include="$(MSBuildThisFileDirectory)lib\IOS\Device\libtesseract-ios.a">
			<Kind>Static</Kind>
			<ForceLoad>True</ForceLoad>
			<IsCxx>True</IsCxx>
			<SmartLink>True</SmartLink>
		</NativeReference>
		<!-- libpng -->
		<NativeReference Include="$(MSBuildThisFileDirectory)lib\IOS\Device\libpng16-ios.a">
			<Kind>Static</Kind>
			<SmartLink>False</SmartLink>
		</NativeReference>
		<!-- libtiff -->
		<NativeReference Include="$(MSBuildThisFileDirectory)lib\IOS\Device\libtiff-ios.a">
			<Kind>Static</Kind>
			<SmartLink>False</SmartLink>
		</NativeReference>
		<!-- libjpeg -->
		<NativeReference Include="$(MSBuildThisFileDirectory)lib\IOS\Device\libjpeg-ios.a">
			<Kind>Static</Kind>
			<SmartLink>False</SmartLink>
		</NativeReference>
		<!-- liblept -->
		<NativeReference Include="$(MSBuildThisFileDirectory)lib\IOS\Device\liblept-ios.a">
			<Kind>Static</Kind>
			<SmartLink>False</SmartLink>
		</NativeReference>
	</ItemGroup>
	
</Project>

